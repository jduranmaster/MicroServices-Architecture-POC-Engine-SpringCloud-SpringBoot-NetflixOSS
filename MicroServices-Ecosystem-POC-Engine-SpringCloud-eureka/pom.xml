<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-starter-parent</artifactId>
		<version>1.0.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<artifactId>MicroServices-Ecosystem-POC-Engine-SpringCloud-eureka</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<properties>
		<scala.version>2.11.6</scala.version>
		<start-class>eureka.main.EurekaServer</start-class>
	</properties>

	<repositories>
		<repository>
			<id>scala-tools.org</id>
			<name>Scala-Tools Maven2 Repository</name>
			<!-- <url>http://scala-tools.org/repo-releases</url> -->
			<url>https://oss.sonatype.org/content/groups/scala-tools/</url>
		</repository>
		<repository>
			<id>scala-tools2.org</id>
			<name>Scala-Tools Maven2 Repository-2</name>
			<!-- <url>http://scala-tools.org/repo-releases</url> -->
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>scala-tools.org</id>
			<name>Scala-Tools Maven2 Repository</name>
			<!-- <url>http://scala-tools.org/repo-releases</url> -->
			<url>https://oss.sonatype.org/content/groups/scala-tools/</url>
		</pluginRepository>
		<pluginRepository>
			<id>scala-tools2.org</id>
			<name>Scala-Tools Maven2 Repository-2</name>
			<!-- <url>http://scala-tools.org/repo-releases</url> -->
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>

		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>

		<!-- 
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka-server</artifactId>			
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- 
				<configuration>
					<requiresUnpack>
						<dependency>
							<groupId>com.netflix.eureka</groupId>
							<artifactId>eureka-core</artifactId>
						</dependency>
						<dependency>
							<groupId>com.netflix.eureka</groupId>
							<artifactId>eureka-client</artifactId>
						</dependency>
					</requiresUnpack>
				</configuration>
				 -->
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<!-- Configure scala plugin for mixed modules -->
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Configure scala eclipse environment for mixed modules -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<downloadSources>true</downloadSources>
					<buildcommands>
						<buildcommand>ch.epfl.lamp.sdt.core.scalabuilder</buildcommand>
					</buildcommands>
					<additionalProjectnatures>
						<projectnature>ch.epfl.lamp.sdt.core.scalanature</projectnature>
					</additionalProjectnatures>
					<classpathContainers>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
						<classpathContainer>ch.epfl.lamp.sdt.launching.SCALA_CONTAINER</classpathContainer>
					</classpathContainers>
				</configuration>
			</plugin>

			<!-- Configure scala sources & tests sources folder for mixed modules -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/scala</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/test/scala</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.2.6</version>
				<configuration>
					<imageName>${project.artifactId}</imageName>
					<dockerDirectory>src/main/dockerfile</dockerDirectory>
					<!-- 
					<baseImage>dockerfile/java:oracle-java8</baseImage>
					<cmd>java -jar -Xms256m -Xmx256m /data/${project.build.finalName}.jar</cmd>
					 -->
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.artifact}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>